DROP TABLE SHIFT_TYPE ;
DROP TABLE WORK_STATUS;
DROP TABLE UNIT;
DROP TABLE UNION_RECRUIT;
DROP TABLE USER;
DROP TABLE SCHEDULE_REQUEST;
DROP TABLE SCHEDULE_DETAIL;
DROP TABLE SCHEDULE_REPORT;

CREATE TABLE SHIFT_TYPE 
(
ID VARCHAR(10) NOT NULL, 
Description VARCHAR(255),
Start_time DATE,
End_time DATE,
Indicator VARCHAR(10),
PRIMARY KEY (ID)
);

CREATE TABLE WORK_STATUS
(
ID VARCHAR(10) NOT NULL, 
Description VARCHAR(255),
Indicator VARCHAR(10),
PRIMARY KEY (ID)
);

CREATE TABLE UNIT
(
ID VARCHAR(255) NOT NULL,
Description VARCHAR(255),
Schedule_Window INT,
PRIMARY KEY (ID)
);

CREATE TABLE UNION_RECRUIT(
ID VARCHAR(10) NOT NULL, 
Name VARCHAR(255) NOT NULL,
Description VARCHAR(255) NOT NULL, 
PRIMARY KEY (ID)
);

CREATE TABLE USER
(
ID VARCHAR(10) NOT NULL, 
LastName VARCHAR(255) NOT NULL,
FirstName VARCHAR(255) NOT NULL,
Gender VARCHAR(10) NOT NULL,
Seniority INT,
Title VARCHAR(255),
Union_Recruit VARCHAR(10) NOT NULL,
Contract_Employee VARCHAR(255) NOT NULL,
Promotion_date DATE,
Hire_date DATE,
Trainer_ID VARCHAR(10), 
PRIMARY KEY (ID),
FOREIGN KEY (Trainer_ID) REFERENCES USER(ID),
FOREIGN KEY (Union_Recruit) REFERENCES UNION_RECRUIT(ID)
);

CREATE TABLE SCHEDULE_REQUEST
(
ID VARCHAR(10) NOT NULL, 
User_ID VARCHAR(10) NOT NULL, 
Union_Recruit VARCHAR(255) NOT NULL,
Overtime_Flag BOOLEAN,
PRIMARY KEY (ID),
FOREIGN KEY (User_ID) REFERENCES USER(ID),
FOREIGN KEY (Union_Recruit) REFERENCES UNION_RECRUIT(ID)
);


CREATE TABLE SCHEDULE_DETAIL
(
ID VARCHAR(10) NOT NULL, 
Request_ID VARCHAR(255),
Request_date DATE,
Shift_Type_ID VARCHAR(255),
Work_Status VARCHAR(255),
PRIMARY KEY (ID),
FOREIGN KEY (Request_ID)
	REFERENCES SCHEDULE_REQUEST(ID)
	        ON DELETE CASCADE,
FOREIGN KEY (Shift_Type_ID)
	REFERENCES SHIFT_TYPE(ID)
	        ON DELETE CASCADE,
FOREIGN KEY (Work_Status)
	REFERENCES WORK_STATUS(ID)
);




CREATE TABLE SCHEDULE_REPORT
(
ID VARCHAR(10) NOT NULL, 
User_ID VARCHAR(10) NOT NULL,
Schedule_Request VARCHAR(10) NOT NULL,
Union_Recruit VARCHAR(255) NOT NULL,
Detail_Records VARCHAR(255) NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (Schedule_Request)
	REFERENCES SCHEDULE_REQUEST(ID),
FOREIGN KEY (Detail_Records)
	REFERENCES SCHEDULE_DETAIL(ID)
);




















